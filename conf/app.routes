# microservice specific routes

GET        /repositories                                uk.gov.hmrc.cataloguefrontend.CatalogueController.allRepositories
GET        /repositories/:name                          uk.gov.hmrc.cataloguefrontend.CatalogueController.repository(name)
GET        /teams                                       uk.gov.hmrc.cataloguefrontend.CatalogueController.allTeams
GET        /teams/:teamName                             uk.gov.hmrc.cataloguefrontend.CatalogueController.team(teamName)
GET        /teams/:teamName/out-of-date-dependencies    uk.gov.hmrc.cataloguefrontend.CatalogueController.outOfDateTeamDependencies(teamName)
GET        /digital-services                            uk.gov.hmrc.cataloguefrontend.CatalogueController.allDigitalServices
GET        /digital-service/:digitalServiceName         uk.gov.hmrc.cataloguefrontend.CatalogueController.digitalService(digitalServiceName)
GET        /digital-service/owner/:digitalServiceName   uk.gov.hmrc.cataloguefrontend.CatalogueController.serviceOwner(digitalServiceName)
POST       /digital-service/owner                       uk.gov.hmrc.cataloguefrontend.CatalogueController.saveServiceOwner()
GET        /users                                       uk.gov.hmrc.cataloguefrontend.CatalogueController.allUsers

GET        /services                                    uk.gov.hmrc.cataloguefrontend.CatalogueController.allServices
GET        /service/:name                               uk.gov.hmrc.cataloguefrontend.CatalogueController.service(name)
GET        /service/:name/config                        uk.gov.hmrc.cataloguefrontend.CatalogueController.serviceConfig(name)
GET        /service/:name/config/raw                    uk.gov.hmrc.cataloguefrontend.CatalogueController.serviceConfigRaw(name)
GET        /libraries                                   uk.gov.hmrc.cataloguefrontend.CatalogueController.allLibraries
GET        /library/:name                               uk.gov.hmrc.cataloguefrontend.CatalogueController.library(name)
GET        /prototypes                                  uk.gov.hmrc.cataloguefrontend.CatalogueController.allPrototypes
GET        /prototype/:name                             uk.gov.hmrc.cataloguefrontend.CatalogueController.prototype(name)
GET        /deployments                                 uk.gov.hmrc.cataloguefrontend.CatalogueController.deploymentsPage
GET        /deployments/list                            uk.gov.hmrc.cataloguefrontend.CatalogueController.deploymentsList(team: Option[String], serviceName: Option[String])
GET        /assets/*file                                controllers.Assets.at(path="/public", file)
GET        /                                            uk.gov.hmrc.cataloguefrontend.CatalogueController.index
GET        /admin/metrics                               @com.kenshoo.play.metrics.MetricsController.metrics

GET        /dependencyReport                            uk.gov.hmrc.cataloguefrontend.DependencyReportController.dependencyReport

GET        /sign-in                                     @uk.gov.hmrc.cataloguefrontend.AuthController.showSignInPage
POST       /sign-in                                     @uk.gov.hmrc.cataloguefrontend.AuthController.submit
GET        /sign-out                                    @uk.gov.hmrc.cataloguefrontend.AuthController.signOut

GET        /search                                      uk.gov.hmrc.cataloguefrontend.SearchByUrlController.searchLanding
POST       /search                                      uk.gov.hmrc.cataloguefrontend.SearchByUrlController.searchUrl

GET        /dependencies/:name                          uk.gov.hmrc.cataloguefrontend.DependenciesController.service(name)

GET        /dependencyexplorer                          uk.gov.hmrc.cataloguefrontend.DependencyExplorerController.landing
GET        /dependencyexplorer/results                  uk.gov.hmrc.cataloguefrontend.DependencyExplorerController.search

GET        /jdkexplorer                                 uk.gov.hmrc.cataloguefrontend.JDKVersionController.findLatestVersions(flag: String)